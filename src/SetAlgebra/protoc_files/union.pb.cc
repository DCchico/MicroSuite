// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: union.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "union.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace union_service {
class UtilRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UtilRequest> {
} _UtilRequest_default_instance_;
class UnionRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UnionRequest> {
} _UnionRequest_default_instance_;
class UtilDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Util> {
} _Util_default_instance_;
class UtilResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UtilResponse> {
} _UtilResponse_default_instance_;
class UnionResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UnionResponse> {
} _UnionResponse_default_instance_;

namespace protobuf_union_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UtilRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UtilRequest, util_request_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionRequest, word_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionRequest, util_request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionRequest, last_request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionRequest, resp_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionRequest, kill_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionRequest, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionRequest, load_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Util, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Util, user_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Util, system_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Util, io_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Util, idle_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UtilResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UtilResponse, util_present_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UtilResponse, intersection_srv_util_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UtilResponse, union_util_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, doc_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, create_union_req_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, unpack_union_req_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, update_union_util_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, get_intersection_srv_responses_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, create_intersection_srv_req_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, unpack_intersection_srv_resp_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, unpack_intersection_srv_req_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, calculate_intersection_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, pack_intersection_srv_resp_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, calculate_union_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, pack_union_resp_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, number_of_intersection_servers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, util_response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, resp_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, union_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, start_stamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, end_stamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, num_inline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, num_workers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, num_resp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, kill_ack_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(UtilRequest)},
  { 5, -1, sizeof(UnionRequest)},
  { 16, -1, sizeof(Util)},
  { 24, -1, sizeof(UtilResponse)},
  { 31, -1, sizeof(UnionResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_UtilRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UnionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Util_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UtilResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UnionResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "union.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace

void TableStruct::Shutdown() {
  _UtilRequest_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _UnionRequest_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Util_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _UtilResponse_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _UnionResponse_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fdescriptor_2eproto::InitDefaults();
  _UtilRequest_default_instance_.DefaultConstruct();
  _UnionRequest_default_instance_.DefaultConstruct();
  _Util_default_instance_.DefaultConstruct();
  _UtilResponse_default_instance_.DefaultConstruct();
  _UnionResponse_default_instance_.DefaultConstruct();
  _UnionRequest_default_instance_.get_mutable()->util_request_ = const_cast< ::union_service::UtilRequest*>(
      ::union_service::UtilRequest::internal_default_instance());
  _UtilResponse_default_instance_.get_mutable()->union_util_ = const_cast< ::union_service::Util*>(
      ::union_service::Util::internal_default_instance());
  _UnionResponse_default_instance_.get_mutable()->util_response_ = const_cast< ::union_service::UtilResponse*>(
      ::union_service::UtilResponse::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\013union.proto\022\runion_service\032 google/pro"
      "tobuf/descriptor.proto\"#\n\013UtilRequest\022\024\n"
      "\014util_request\030\001 \001(\010\"\253\001\n\014UnionRequest\022\020\n\010"
      "word_ids\030\001 \003(\004\0220\n\014util_request\030\002 \001(\0132\032.u"
      "nion_service.UtilRequest\022\024\n\014last_request"
      "\030\003 \001(\010\022\021\n\tresp_time\030\004 \001(\004\022\014\n\004kill\030\005 \001(\010\022"
      "\022\n\nrequest_id\030\006 \001(\004\022\014\n\004load\030\007 \001(\r\"R\n\004Uti"
      "l\022\021\n\tuser_time\030\001 \001(\004\022\023\n\013system_time\030\002 \001("
      "\004\022\017\n\007io_time\030\003 \001(\004\022\021\n\tidle_time\030\004 \001(\004\"\201\001"
      "\n\014UtilResponse\022\024\n\014util_present\030\001 \001(\010\0222\n\025"
      "intersection_srv_util\030\002 \003(\0132\023.union_serv"
      "ice.Util\022\'\n\nunion_util\030\003 \001(\0132\023.union_ser"
      "vice.Util\"\300\005\n\rUnionResponse\022\017\n\007doc_ids\030\001"
      " \003(\004\022\035\n\025create_union_req_time\030\002 \001(\004\022\035\n\025u"
      "npack_union_req_time\030\003 \001(\004\022\036\n\026update_uni"
      "on_util_time\030\004 \001(\004\022+\n#get_intersection_s"
      "rv_responses_time\030\005 \001(\004\022(\n create_inters"
      "ection_srv_req_time\030\006 \001(\004\022)\n!unpack_inte"
      "rsection_srv_resp_time\030\007 \001(\004\022(\n unpack_i"
      "ntersection_srv_req_time\030\010 \001(\004\022#\n\033calcul"
      "ate_intersection_time\030\t \001(\004\022\'\n\037pack_inte"
      "rsection_srv_resp_time\030\n \001(\004\022\034\n\024calculat"
      "e_union_time\030\013 \001(\004\022\034\n\024pack_union_resp_ti"
      "me\030\014 \001(\004\022&\n\036number_of_intersection_serve"
      "rs\030\r \001(\r\0222\n\rutil_response\030\016 \001(\0132\033.union_"
      "service.UtilResponse\022\021\n\tresp_time\030\017 \001(\004\022"
      "\022\n\nunion_time\030\020 \001(\004\022\023\n\013start_stamp\030\021 \001(\004"
      "\022\021\n\tend_stamp\030\022 \001(\004\022\022\n\nrequest_id\030\023 \001(\004\022"
      "\022\n\nnum_inline\030\024 \001(\004\022\023\n\013num_workers\030\025 \001(\004"
      "\022\020\n\010num_resp\030\026 \001(\004\022\020\n\010kill_ack\030\027 \001(\0102T\n\014"
      "UnionService\022D\n\005Union\022\033.union_service.Un"
      "ionRequest\032\034.union_service.UnionResponse"
      "\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1290);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "union.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_google_2fprotobuf_2fdescriptor_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_union_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UtilRequest::kUtilRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UtilRequest::UtilRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_union_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:union_service.UtilRequest)
}
UtilRequest::UtilRequest(const UtilRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  util_request_ = from.util_request_;
  // @@protoc_insertion_point(copy_constructor:union_service.UtilRequest)
}

void UtilRequest::SharedCtor() {
  util_request_ = false;
  _cached_size_ = 0;
}

UtilRequest::~UtilRequest() {
  // @@protoc_insertion_point(destructor:union_service.UtilRequest)
  SharedDtor();
}

void UtilRequest::SharedDtor() {
}

void UtilRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UtilRequest::descriptor() {
  protobuf_union_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_union_2eproto::file_level_metadata[0].descriptor;
}

const UtilRequest& UtilRequest::default_instance() {
  protobuf_union_2eproto::InitDefaults();
  return *internal_default_instance();
}

UtilRequest* UtilRequest::New(::google::protobuf::Arena* arena) const {
  UtilRequest* n = new UtilRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UtilRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:union_service.UtilRequest)
  util_request_ = false;
}

bool UtilRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:union_service.UtilRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool util_request = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &util_request_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:union_service.UtilRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:union_service.UtilRequest)
  return false;
#undef DO_
}

void UtilRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:union_service.UtilRequest)
  // bool util_request = 1;
  if (this->util_request() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->util_request(), output);
  }

  // @@protoc_insertion_point(serialize_end:union_service.UtilRequest)
}

::google::protobuf::uint8* UtilRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:union_service.UtilRequest)
  // bool util_request = 1;
  if (this->util_request() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->util_request(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:union_service.UtilRequest)
  return target;
}

size_t UtilRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:union_service.UtilRequest)
  size_t total_size = 0;

  // bool util_request = 1;
  if (this->util_request() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UtilRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:union_service.UtilRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UtilRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UtilRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:union_service.UtilRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:union_service.UtilRequest)
    MergeFrom(*source);
  }
}

void UtilRequest::MergeFrom(const UtilRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:union_service.UtilRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.util_request() != 0) {
    set_util_request(from.util_request());
  }
}

void UtilRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:union_service.UtilRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UtilRequest::CopyFrom(const UtilRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:union_service.UtilRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UtilRequest::IsInitialized() const {
  return true;
}

void UtilRequest::Swap(UtilRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UtilRequest::InternalSwap(UtilRequest* other) {
  std::swap(util_request_, other->util_request_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UtilRequest::GetMetadata() const {
  protobuf_union_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_union_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UtilRequest

// bool util_request = 1;
void UtilRequest::clear_util_request() {
  util_request_ = false;
}
bool UtilRequest::util_request() const {
  // @@protoc_insertion_point(field_get:union_service.UtilRequest.util_request)
  return util_request_;
}
void UtilRequest::set_util_request(bool value) {
  
  util_request_ = value;
  // @@protoc_insertion_point(field_set:union_service.UtilRequest.util_request)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnionRequest::kWordIdsFieldNumber;
const int UnionRequest::kUtilRequestFieldNumber;
const int UnionRequest::kLastRequestFieldNumber;
const int UnionRequest::kRespTimeFieldNumber;
const int UnionRequest::kKillFieldNumber;
const int UnionRequest::kRequestIdFieldNumber;
const int UnionRequest::kLoadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnionRequest::UnionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_union_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:union_service.UnionRequest)
}
UnionRequest::UnionRequest(const UnionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      word_ids_(from.word_ids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_util_request()) {
    util_request_ = new ::union_service::UtilRequest(*from.util_request_);
  } else {
    util_request_ = NULL;
  }
  ::memcpy(&resp_time_, &from.resp_time_,
    reinterpret_cast<char*>(&request_id_) -
    reinterpret_cast<char*>(&resp_time_) + sizeof(request_id_));
  // @@protoc_insertion_point(copy_constructor:union_service.UnionRequest)
}

void UnionRequest::SharedCtor() {
  ::memset(&util_request_, 0, reinterpret_cast<char*>(&request_id_) -
    reinterpret_cast<char*>(&util_request_) + sizeof(request_id_));
  _cached_size_ = 0;
}

UnionRequest::~UnionRequest() {
  // @@protoc_insertion_point(destructor:union_service.UnionRequest)
  SharedDtor();
}

void UnionRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete util_request_;
  }
}

void UnionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnionRequest::descriptor() {
  protobuf_union_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_union_2eproto::file_level_metadata[1].descriptor;
}

const UnionRequest& UnionRequest::default_instance() {
  protobuf_union_2eproto::InitDefaults();
  return *internal_default_instance();
}

UnionRequest* UnionRequest::New(::google::protobuf::Arena* arena) const {
  UnionRequest* n = new UnionRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:union_service.UnionRequest)
  word_ids_.Clear();
  if (GetArenaNoVirtual() == NULL && util_request_ != NULL) {
    delete util_request_;
  }
  util_request_ = NULL;
  ::memset(&resp_time_, 0, reinterpret_cast<char*>(&request_id_) -
    reinterpret_cast<char*>(&resp_time_) + sizeof(request_id_));
}

bool UnionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:union_service.UnionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 word_ids = 1;
      case 1: {
        if (tag == 10u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_word_ids())));
        } else if (tag == 8u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_word_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .union_service.UtilRequest util_request = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_util_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool last_request = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &last_request_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 resp_time = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &resp_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool kill = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &kill_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 request_id = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 load = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &load_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:union_service.UnionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:union_service.UnionRequest)
  return false;
#undef DO_
}

void UnionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:union_service.UnionRequest)
  // repeated uint64 word_ids = 1;
  if (this->word_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_word_ids_cached_byte_size_);
  }
  for (int i = 0; i < this->word_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->word_ids(i), output);
  }

  // .union_service.UtilRequest util_request = 2;
  if (this->has_util_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->util_request_, output);
  }

  // bool last_request = 3;
  if (this->last_request() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->last_request(), output);
  }

  // uint64 resp_time = 4;
  if (this->resp_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->resp_time(), output);
  }

  // bool kill = 5;
  if (this->kill() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->kill(), output);
  }

  // uint64 request_id = 6;
  if (this->request_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->request_id(), output);
  }

  // uint32 load = 7;
  if (this->load() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->load(), output);
  }

  // @@protoc_insertion_point(serialize_end:union_service.UnionRequest)
}

::google::protobuf::uint8* UnionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:union_service.UnionRequest)
  // repeated uint64 word_ids = 1;
  if (this->word_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _word_ids_cached_byte_size_, target);
  }
  for (int i = 0; i < this->word_ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->word_ids(i), target);
  }

  // .union_service.UtilRequest util_request = 2;
  if (this->has_util_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->util_request_, false, target);
  }

  // bool last_request = 3;
  if (this->last_request() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->last_request(), target);
  }

  // uint64 resp_time = 4;
  if (this->resp_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->resp_time(), target);
  }

  // bool kill = 5;
  if (this->kill() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->kill(), target);
  }

  // uint64 request_id = 6;
  if (this->request_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->request_id(), target);
  }

  // uint32 load = 7;
  if (this->load() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->load(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:union_service.UnionRequest)
  return target;
}

size_t UnionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:union_service.UnionRequest)
  size_t total_size = 0;

  // repeated uint64 word_ids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->word_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _word_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .union_service.UtilRequest util_request = 2;
  if (this->has_util_request()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->util_request_);
  }

  // uint64 resp_time = 4;
  if (this->resp_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->resp_time());
  }

  // bool last_request = 3;
  if (this->last_request() != 0) {
    total_size += 1 + 1;
  }

  // bool kill = 5;
  if (this->kill() != 0) {
    total_size += 1 + 1;
  }

  // uint32 load = 7;
  if (this->load() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->load());
  }

  // uint64 request_id = 6;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->request_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:union_service.UnionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UnionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:union_service.UnionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:union_service.UnionRequest)
    MergeFrom(*source);
  }
}

void UnionRequest::MergeFrom(const UnionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:union_service.UnionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  word_ids_.MergeFrom(from.word_ids_);
  if (from.has_util_request()) {
    mutable_util_request()->::union_service::UtilRequest::MergeFrom(from.util_request());
  }
  if (from.resp_time() != 0) {
    set_resp_time(from.resp_time());
  }
  if (from.last_request() != 0) {
    set_last_request(from.last_request());
  }
  if (from.kill() != 0) {
    set_kill(from.kill());
  }
  if (from.load() != 0) {
    set_load(from.load());
  }
  if (from.request_id() != 0) {
    set_request_id(from.request_id());
  }
}

void UnionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:union_service.UnionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnionRequest::CopyFrom(const UnionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:union_service.UnionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnionRequest::IsInitialized() const {
  return true;
}

void UnionRequest::Swap(UnionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnionRequest::InternalSwap(UnionRequest* other) {
  word_ids_.UnsafeArenaSwap(&other->word_ids_);
  std::swap(util_request_, other->util_request_);
  std::swap(resp_time_, other->resp_time_);
  std::swap(last_request_, other->last_request_);
  std::swap(kill_, other->kill_);
  std::swap(load_, other->load_);
  std::swap(request_id_, other->request_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnionRequest::GetMetadata() const {
  protobuf_union_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_union_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnionRequest

// repeated uint64 word_ids = 1;
int UnionRequest::word_ids_size() const {
  return word_ids_.size();
}
void UnionRequest::clear_word_ids() {
  word_ids_.Clear();
}
::google::protobuf::uint64 UnionRequest::word_ids(int index) const {
  // @@protoc_insertion_point(field_get:union_service.UnionRequest.word_ids)
  return word_ids_.Get(index);
}
void UnionRequest::set_word_ids(int index, ::google::protobuf::uint64 value) {
  word_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:union_service.UnionRequest.word_ids)
}
void UnionRequest::add_word_ids(::google::protobuf::uint64 value) {
  word_ids_.Add(value);
  // @@protoc_insertion_point(field_add:union_service.UnionRequest.word_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
UnionRequest::word_ids() const {
  // @@protoc_insertion_point(field_list:union_service.UnionRequest.word_ids)
  return word_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
UnionRequest::mutable_word_ids() {
  // @@protoc_insertion_point(field_mutable_list:union_service.UnionRequest.word_ids)
  return &word_ids_;
}

// .union_service.UtilRequest util_request = 2;
bool UnionRequest::has_util_request() const {
  return this != internal_default_instance() && util_request_ != NULL;
}
void UnionRequest::clear_util_request() {
  if (GetArenaNoVirtual() == NULL && util_request_ != NULL) delete util_request_;
  util_request_ = NULL;
}
const ::union_service::UtilRequest& UnionRequest::util_request() const {
  // @@protoc_insertion_point(field_get:union_service.UnionRequest.util_request)
  return util_request_ != NULL ? *util_request_
                         : *::union_service::UtilRequest::internal_default_instance();
}
::union_service::UtilRequest* UnionRequest::mutable_util_request() {
  
  if (util_request_ == NULL) {
    util_request_ = new ::union_service::UtilRequest;
  }
  // @@protoc_insertion_point(field_mutable:union_service.UnionRequest.util_request)
  return util_request_;
}
::union_service::UtilRequest* UnionRequest::release_util_request() {
  // @@protoc_insertion_point(field_release:union_service.UnionRequest.util_request)
  
  ::union_service::UtilRequest* temp = util_request_;
  util_request_ = NULL;
  return temp;
}
void UnionRequest::set_allocated_util_request(::union_service::UtilRequest* util_request) {
  delete util_request_;
  util_request_ = util_request;
  if (util_request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:union_service.UnionRequest.util_request)
}

// bool last_request = 3;
void UnionRequest::clear_last_request() {
  last_request_ = false;
}
bool UnionRequest::last_request() const {
  // @@protoc_insertion_point(field_get:union_service.UnionRequest.last_request)
  return last_request_;
}
void UnionRequest::set_last_request(bool value) {
  
  last_request_ = value;
  // @@protoc_insertion_point(field_set:union_service.UnionRequest.last_request)
}

// uint64 resp_time = 4;
void UnionRequest::clear_resp_time() {
  resp_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UnionRequest::resp_time() const {
  // @@protoc_insertion_point(field_get:union_service.UnionRequest.resp_time)
  return resp_time_;
}
void UnionRequest::set_resp_time(::google::protobuf::uint64 value) {
  
  resp_time_ = value;
  // @@protoc_insertion_point(field_set:union_service.UnionRequest.resp_time)
}

// bool kill = 5;
void UnionRequest::clear_kill() {
  kill_ = false;
}
bool UnionRequest::kill() const {
  // @@protoc_insertion_point(field_get:union_service.UnionRequest.kill)
  return kill_;
}
void UnionRequest::set_kill(bool value) {
  
  kill_ = value;
  // @@protoc_insertion_point(field_set:union_service.UnionRequest.kill)
}

// uint64 request_id = 6;
void UnionRequest::clear_request_id() {
  request_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UnionRequest::request_id() const {
  // @@protoc_insertion_point(field_get:union_service.UnionRequest.request_id)
  return request_id_;
}
void UnionRequest::set_request_id(::google::protobuf::uint64 value) {
  
  request_id_ = value;
  // @@protoc_insertion_point(field_set:union_service.UnionRequest.request_id)
}

// uint32 load = 7;
void UnionRequest::clear_load() {
  load_ = 0u;
}
::google::protobuf::uint32 UnionRequest::load() const {
  // @@protoc_insertion_point(field_get:union_service.UnionRequest.load)
  return load_;
}
void UnionRequest::set_load(::google::protobuf::uint32 value) {
  
  load_ = value;
  // @@protoc_insertion_point(field_set:union_service.UnionRequest.load)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Util::kUserTimeFieldNumber;
const int Util::kSystemTimeFieldNumber;
const int Util::kIoTimeFieldNumber;
const int Util::kIdleTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Util::Util()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_union_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:union_service.Util)
}
Util::Util(const Util& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_time_, &from.user_time_,
    reinterpret_cast<char*>(&idle_time_) -
    reinterpret_cast<char*>(&user_time_) + sizeof(idle_time_));
  // @@protoc_insertion_point(copy_constructor:union_service.Util)
}

void Util::SharedCtor() {
  ::memset(&user_time_, 0, reinterpret_cast<char*>(&idle_time_) -
    reinterpret_cast<char*>(&user_time_) + sizeof(idle_time_));
  _cached_size_ = 0;
}

Util::~Util() {
  // @@protoc_insertion_point(destructor:union_service.Util)
  SharedDtor();
}

void Util::SharedDtor() {
}

void Util::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Util::descriptor() {
  protobuf_union_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_union_2eproto::file_level_metadata[2].descriptor;
}

const Util& Util::default_instance() {
  protobuf_union_2eproto::InitDefaults();
  return *internal_default_instance();
}

Util* Util::New(::google::protobuf::Arena* arena) const {
  Util* n = new Util;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Util::Clear() {
// @@protoc_insertion_point(message_clear_start:union_service.Util)
  ::memset(&user_time_, 0, reinterpret_cast<char*>(&idle_time_) -
    reinterpret_cast<char*>(&user_time_) + sizeof(idle_time_));
}

bool Util::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:union_service.Util)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 user_time = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 system_time = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &system_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 io_time = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &io_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 idle_time = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &idle_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:union_service.Util)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:union_service.Util)
  return false;
#undef DO_
}

void Util::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:union_service.Util)
  // uint64 user_time = 1;
  if (this->user_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->user_time(), output);
  }

  // uint64 system_time = 2;
  if (this->system_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->system_time(), output);
  }

  // uint64 io_time = 3;
  if (this->io_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->io_time(), output);
  }

  // uint64 idle_time = 4;
  if (this->idle_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->idle_time(), output);
  }

  // @@protoc_insertion_point(serialize_end:union_service.Util)
}

::google::protobuf::uint8* Util::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:union_service.Util)
  // uint64 user_time = 1;
  if (this->user_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->user_time(), target);
  }

  // uint64 system_time = 2;
  if (this->system_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->system_time(), target);
  }

  // uint64 io_time = 3;
  if (this->io_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->io_time(), target);
  }

  // uint64 idle_time = 4;
  if (this->idle_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->idle_time(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:union_service.Util)
  return target;
}

size_t Util::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:union_service.Util)
  size_t total_size = 0;

  // uint64 user_time = 1;
  if (this->user_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_time());
  }

  // uint64 system_time = 2;
  if (this->system_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->system_time());
  }

  // uint64 io_time = 3;
  if (this->io_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->io_time());
  }

  // uint64 idle_time = 4;
  if (this->idle_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->idle_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Util::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:union_service.Util)
  GOOGLE_DCHECK_NE(&from, this);
  const Util* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Util>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:union_service.Util)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:union_service.Util)
    MergeFrom(*source);
  }
}

void Util::MergeFrom(const Util& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:union_service.Util)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.user_time() != 0) {
    set_user_time(from.user_time());
  }
  if (from.system_time() != 0) {
    set_system_time(from.system_time());
  }
  if (from.io_time() != 0) {
    set_io_time(from.io_time());
  }
  if (from.idle_time() != 0) {
    set_idle_time(from.idle_time());
  }
}

void Util::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:union_service.Util)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Util::CopyFrom(const Util& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:union_service.Util)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Util::IsInitialized() const {
  return true;
}

void Util::Swap(Util* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Util::InternalSwap(Util* other) {
  std::swap(user_time_, other->user_time_);
  std::swap(system_time_, other->system_time_);
  std::swap(io_time_, other->io_time_);
  std::swap(idle_time_, other->idle_time_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Util::GetMetadata() const {
  protobuf_union_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_union_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Util

// uint64 user_time = 1;
void Util::clear_user_time() {
  user_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 Util::user_time() const {
  // @@protoc_insertion_point(field_get:union_service.Util.user_time)
  return user_time_;
}
void Util::set_user_time(::google::protobuf::uint64 value) {
  
  user_time_ = value;
  // @@protoc_insertion_point(field_set:union_service.Util.user_time)
}

// uint64 system_time = 2;
void Util::clear_system_time() {
  system_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 Util::system_time() const {
  // @@protoc_insertion_point(field_get:union_service.Util.system_time)
  return system_time_;
}
void Util::set_system_time(::google::protobuf::uint64 value) {
  
  system_time_ = value;
  // @@protoc_insertion_point(field_set:union_service.Util.system_time)
}

// uint64 io_time = 3;
void Util::clear_io_time() {
  io_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 Util::io_time() const {
  // @@protoc_insertion_point(field_get:union_service.Util.io_time)
  return io_time_;
}
void Util::set_io_time(::google::protobuf::uint64 value) {
  
  io_time_ = value;
  // @@protoc_insertion_point(field_set:union_service.Util.io_time)
}

// uint64 idle_time = 4;
void Util::clear_idle_time() {
  idle_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 Util::idle_time() const {
  // @@protoc_insertion_point(field_get:union_service.Util.idle_time)
  return idle_time_;
}
void Util::set_idle_time(::google::protobuf::uint64 value) {
  
  idle_time_ = value;
  // @@protoc_insertion_point(field_set:union_service.Util.idle_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UtilResponse::kUtilPresentFieldNumber;
const int UtilResponse::kIntersectionSrvUtilFieldNumber;
const int UtilResponse::kUnionUtilFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UtilResponse::UtilResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_union_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:union_service.UtilResponse)
}
UtilResponse::UtilResponse(const UtilResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      intersection_srv_util_(from.intersection_srv_util_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_union_util()) {
    union_util_ = new ::union_service::Util(*from.union_util_);
  } else {
    union_util_ = NULL;
  }
  util_present_ = from.util_present_;
  // @@protoc_insertion_point(copy_constructor:union_service.UtilResponse)
}

void UtilResponse::SharedCtor() {
  ::memset(&union_util_, 0, reinterpret_cast<char*>(&util_present_) -
    reinterpret_cast<char*>(&union_util_) + sizeof(util_present_));
  _cached_size_ = 0;
}

UtilResponse::~UtilResponse() {
  // @@protoc_insertion_point(destructor:union_service.UtilResponse)
  SharedDtor();
}

void UtilResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete union_util_;
  }
}

void UtilResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UtilResponse::descriptor() {
  protobuf_union_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_union_2eproto::file_level_metadata[3].descriptor;
}

const UtilResponse& UtilResponse::default_instance() {
  protobuf_union_2eproto::InitDefaults();
  return *internal_default_instance();
}

UtilResponse* UtilResponse::New(::google::protobuf::Arena* arena) const {
  UtilResponse* n = new UtilResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UtilResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:union_service.UtilResponse)
  intersection_srv_util_.Clear();
  if (GetArenaNoVirtual() == NULL && union_util_ != NULL) {
    delete union_util_;
  }
  union_util_ = NULL;
  util_present_ = false;
}

bool UtilResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:union_service.UtilResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool util_present = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &util_present_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .union_service.Util intersection_srv_util = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_intersection_srv_util()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // .union_service.Util union_util = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_union_util()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:union_service.UtilResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:union_service.UtilResponse)
  return false;
#undef DO_
}

void UtilResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:union_service.UtilResponse)
  // bool util_present = 1;
  if (this->util_present() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->util_present(), output);
  }

  // repeated .union_service.Util intersection_srv_util = 2;
  for (unsigned int i = 0, n = this->intersection_srv_util_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->intersection_srv_util(i), output);
  }

  // .union_service.Util union_util = 3;
  if (this->has_union_util()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->union_util_, output);
  }

  // @@protoc_insertion_point(serialize_end:union_service.UtilResponse)
}

::google::protobuf::uint8* UtilResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:union_service.UtilResponse)
  // bool util_present = 1;
  if (this->util_present() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->util_present(), target);
  }

  // repeated .union_service.Util intersection_srv_util = 2;
  for (unsigned int i = 0, n = this->intersection_srv_util_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->intersection_srv_util(i), false, target);
  }

  // .union_service.Util union_util = 3;
  if (this->has_union_util()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->union_util_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:union_service.UtilResponse)
  return target;
}

size_t UtilResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:union_service.UtilResponse)
  size_t total_size = 0;

  // repeated .union_service.Util intersection_srv_util = 2;
  {
    unsigned int count = this->intersection_srv_util_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intersection_srv_util(i));
    }
  }

  // .union_service.Util union_util = 3;
  if (this->has_union_util()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->union_util_);
  }

  // bool util_present = 1;
  if (this->util_present() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UtilResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:union_service.UtilResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UtilResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UtilResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:union_service.UtilResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:union_service.UtilResponse)
    MergeFrom(*source);
  }
}

void UtilResponse::MergeFrom(const UtilResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:union_service.UtilResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  intersection_srv_util_.MergeFrom(from.intersection_srv_util_);
  if (from.has_union_util()) {
    mutable_union_util()->::union_service::Util::MergeFrom(from.union_util());
  }
  if (from.util_present() != 0) {
    set_util_present(from.util_present());
  }
}

void UtilResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:union_service.UtilResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UtilResponse::CopyFrom(const UtilResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:union_service.UtilResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UtilResponse::IsInitialized() const {
  return true;
}

void UtilResponse::Swap(UtilResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UtilResponse::InternalSwap(UtilResponse* other) {
  intersection_srv_util_.UnsafeArenaSwap(&other->intersection_srv_util_);
  std::swap(union_util_, other->union_util_);
  std::swap(util_present_, other->util_present_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UtilResponse::GetMetadata() const {
  protobuf_union_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_union_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UtilResponse

// bool util_present = 1;
void UtilResponse::clear_util_present() {
  util_present_ = false;
}
bool UtilResponse::util_present() const {
  // @@protoc_insertion_point(field_get:union_service.UtilResponse.util_present)
  return util_present_;
}
void UtilResponse::set_util_present(bool value) {
  
  util_present_ = value;
  // @@protoc_insertion_point(field_set:union_service.UtilResponse.util_present)
}

// repeated .union_service.Util intersection_srv_util = 2;
int UtilResponse::intersection_srv_util_size() const {
  return intersection_srv_util_.size();
}
void UtilResponse::clear_intersection_srv_util() {
  intersection_srv_util_.Clear();
}
const ::union_service::Util& UtilResponse::intersection_srv_util(int index) const {
  // @@protoc_insertion_point(field_get:union_service.UtilResponse.intersection_srv_util)
  return intersection_srv_util_.Get(index);
}
::union_service::Util* UtilResponse::mutable_intersection_srv_util(int index) {
  // @@protoc_insertion_point(field_mutable:union_service.UtilResponse.intersection_srv_util)
  return intersection_srv_util_.Mutable(index);
}
::union_service::Util* UtilResponse::add_intersection_srv_util() {
  // @@protoc_insertion_point(field_add:union_service.UtilResponse.intersection_srv_util)
  return intersection_srv_util_.Add();
}
::google::protobuf::RepeatedPtrField< ::union_service::Util >*
UtilResponse::mutable_intersection_srv_util() {
  // @@protoc_insertion_point(field_mutable_list:union_service.UtilResponse.intersection_srv_util)
  return &intersection_srv_util_;
}
const ::google::protobuf::RepeatedPtrField< ::union_service::Util >&
UtilResponse::intersection_srv_util() const {
  // @@protoc_insertion_point(field_list:union_service.UtilResponse.intersection_srv_util)
  return intersection_srv_util_;
}

// .union_service.Util union_util = 3;
bool UtilResponse::has_union_util() const {
  return this != internal_default_instance() && union_util_ != NULL;
}
void UtilResponse::clear_union_util() {
  if (GetArenaNoVirtual() == NULL && union_util_ != NULL) delete union_util_;
  union_util_ = NULL;
}
const ::union_service::Util& UtilResponse::union_util() const {
  // @@protoc_insertion_point(field_get:union_service.UtilResponse.union_util)
  return union_util_ != NULL ? *union_util_
                         : *::union_service::Util::internal_default_instance();
}
::union_service::Util* UtilResponse::mutable_union_util() {
  
  if (union_util_ == NULL) {
    union_util_ = new ::union_service::Util;
  }
  // @@protoc_insertion_point(field_mutable:union_service.UtilResponse.union_util)
  return union_util_;
}
::union_service::Util* UtilResponse::release_union_util() {
  // @@protoc_insertion_point(field_release:union_service.UtilResponse.union_util)
  
  ::union_service::Util* temp = union_util_;
  union_util_ = NULL;
  return temp;
}
void UtilResponse::set_allocated_union_util(::union_service::Util* union_util) {
  delete union_util_;
  union_util_ = union_util;
  if (union_util) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:union_service.UtilResponse.union_util)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnionResponse::kDocIdsFieldNumber;
const int UnionResponse::kCreateUnionReqTimeFieldNumber;
const int UnionResponse::kUnpackUnionReqTimeFieldNumber;
const int UnionResponse::kUpdateUnionUtilTimeFieldNumber;
const int UnionResponse::kGetIntersectionSrvResponsesTimeFieldNumber;
const int UnionResponse::kCreateIntersectionSrvReqTimeFieldNumber;
const int UnionResponse::kUnpackIntersectionSrvRespTimeFieldNumber;
const int UnionResponse::kUnpackIntersectionSrvReqTimeFieldNumber;
const int UnionResponse::kCalculateIntersectionTimeFieldNumber;
const int UnionResponse::kPackIntersectionSrvRespTimeFieldNumber;
const int UnionResponse::kCalculateUnionTimeFieldNumber;
const int UnionResponse::kPackUnionRespTimeFieldNumber;
const int UnionResponse::kNumberOfIntersectionServersFieldNumber;
const int UnionResponse::kUtilResponseFieldNumber;
const int UnionResponse::kRespTimeFieldNumber;
const int UnionResponse::kUnionTimeFieldNumber;
const int UnionResponse::kStartStampFieldNumber;
const int UnionResponse::kEndStampFieldNumber;
const int UnionResponse::kRequestIdFieldNumber;
const int UnionResponse::kNumInlineFieldNumber;
const int UnionResponse::kNumWorkersFieldNumber;
const int UnionResponse::kNumRespFieldNumber;
const int UnionResponse::kKillAckFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnionResponse::UnionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_union_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:union_service.UnionResponse)
}
UnionResponse::UnionResponse(const UnionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      doc_ids_(from.doc_ids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_util_response()) {
    util_response_ = new ::union_service::UtilResponse(*from.util_response_);
  } else {
    util_response_ = NULL;
  }
  ::memcpy(&create_union_req_time_, &from.create_union_req_time_,
    reinterpret_cast<char*>(&num_resp_) -
    reinterpret_cast<char*>(&create_union_req_time_) + sizeof(num_resp_));
  // @@protoc_insertion_point(copy_constructor:union_service.UnionResponse)
}

void UnionResponse::SharedCtor() {
  ::memset(&util_response_, 0, reinterpret_cast<char*>(&num_resp_) -
    reinterpret_cast<char*>(&util_response_) + sizeof(num_resp_));
  _cached_size_ = 0;
}

UnionResponse::~UnionResponse() {
  // @@protoc_insertion_point(destructor:union_service.UnionResponse)
  SharedDtor();
}

void UnionResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete util_response_;
  }
}

void UnionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnionResponse::descriptor() {
  protobuf_union_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_union_2eproto::file_level_metadata[4].descriptor;
}

const UnionResponse& UnionResponse::default_instance() {
  protobuf_union_2eproto::InitDefaults();
  return *internal_default_instance();
}

UnionResponse* UnionResponse::New(::google::protobuf::Arena* arena) const {
  UnionResponse* n = new UnionResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:union_service.UnionResponse)
  doc_ids_.Clear();
  if (GetArenaNoVirtual() == NULL && util_response_ != NULL) {
    delete util_response_;
  }
  util_response_ = NULL;
  ::memset(&create_union_req_time_, 0, reinterpret_cast<char*>(&num_resp_) -
    reinterpret_cast<char*>(&create_union_req_time_) + sizeof(num_resp_));
}

bool UnionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:union_service.UnionResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 doc_ids = 1;
      case 1: {
        if (tag == 10u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_doc_ids())));
        } else if (tag == 8u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_doc_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 create_union_req_time = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &create_union_req_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 unpack_union_req_time = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &unpack_union_req_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 update_union_util_time = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &update_union_util_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 get_intersection_srv_responses_time = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &get_intersection_srv_responses_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 create_intersection_srv_req_time = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &create_intersection_srv_req_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 unpack_intersection_srv_resp_time = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &unpack_intersection_srv_resp_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 unpack_intersection_srv_req_time = 8;
      case 8: {
        if (tag == 64u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &unpack_intersection_srv_req_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 calculate_intersection_time = 9;
      case 9: {
        if (tag == 72u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &calculate_intersection_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 pack_intersection_srv_resp_time = 10;
      case 10: {
        if (tag == 80u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pack_intersection_srv_resp_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 calculate_union_time = 11;
      case 11: {
        if (tag == 88u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &calculate_union_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 pack_union_resp_time = 12;
      case 12: {
        if (tag == 96u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pack_union_resp_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 number_of_intersection_servers = 13;
      case 13: {
        if (tag == 104u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_of_intersection_servers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .union_service.UtilResponse util_response = 14;
      case 14: {
        if (tag == 114u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_util_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 resp_time = 15;
      case 15: {
        if (tag == 120u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &resp_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 union_time = 16;
      case 16: {
        if (tag == 128u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &union_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 start_stamp = 17;
      case 17: {
        if (tag == 136u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_stamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 end_stamp = 18;
      case 18: {
        if (tag == 144u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &end_stamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 request_id = 19;
      case 19: {
        if (tag == 152u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 num_inline = 20;
      case 20: {
        if (tag == 160u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &num_inline_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 num_workers = 21;
      case 21: {
        if (tag == 168u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &num_workers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 num_resp = 22;
      case 22: {
        if (tag == 176u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &num_resp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool kill_ack = 23;
      case 23: {
        if (tag == 184u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &kill_ack_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:union_service.UnionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:union_service.UnionResponse)
  return false;
#undef DO_
}

void UnionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:union_service.UnionResponse)
  // repeated uint64 doc_ids = 1;
  if (this->doc_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_doc_ids_cached_byte_size_);
  }
  for (int i = 0; i < this->doc_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->doc_ids(i), output);
  }

  // uint64 create_union_req_time = 2;
  if (this->create_union_req_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->create_union_req_time(), output);
  }

  // uint64 unpack_union_req_time = 3;
  if (this->unpack_union_req_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->unpack_union_req_time(), output);
  }

  // uint64 update_union_util_time = 4;
  if (this->update_union_util_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->update_union_util_time(), output);
  }

  // uint64 get_intersection_srv_responses_time = 5;
  if (this->get_intersection_srv_responses_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->get_intersection_srv_responses_time(), output);
  }

  // uint64 create_intersection_srv_req_time = 6;
  if (this->create_intersection_srv_req_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->create_intersection_srv_req_time(), output);
  }

  // uint64 unpack_intersection_srv_resp_time = 7;
  if (this->unpack_intersection_srv_resp_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->unpack_intersection_srv_resp_time(), output);
  }

  // uint64 unpack_intersection_srv_req_time = 8;
  if (this->unpack_intersection_srv_req_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->unpack_intersection_srv_req_time(), output);
  }

  // uint64 calculate_intersection_time = 9;
  if (this->calculate_intersection_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->calculate_intersection_time(), output);
  }

  // uint64 pack_intersection_srv_resp_time = 10;
  if (this->pack_intersection_srv_resp_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->pack_intersection_srv_resp_time(), output);
  }

  // uint64 calculate_union_time = 11;
  if (this->calculate_union_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->calculate_union_time(), output);
  }

  // uint64 pack_union_resp_time = 12;
  if (this->pack_union_resp_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(12, this->pack_union_resp_time(), output);
  }

  // uint32 number_of_intersection_servers = 13;
  if (this->number_of_intersection_servers() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->number_of_intersection_servers(), output);
  }

  // .union_service.UtilResponse util_response = 14;
  if (this->has_util_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->util_response_, output);
  }

  // uint64 resp_time = 15;
  if (this->resp_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(15, this->resp_time(), output);
  }

  // uint64 union_time = 16;
  if (this->union_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(16, this->union_time(), output);
  }

  // uint64 start_stamp = 17;
  if (this->start_stamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(17, this->start_stamp(), output);
  }

  // uint64 end_stamp = 18;
  if (this->end_stamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(18, this->end_stamp(), output);
  }

  // uint64 request_id = 19;
  if (this->request_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(19, this->request_id(), output);
  }

  // uint64 num_inline = 20;
  if (this->num_inline() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(20, this->num_inline(), output);
  }

  // uint64 num_workers = 21;
  if (this->num_workers() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(21, this->num_workers(), output);
  }

  // uint64 num_resp = 22;
  if (this->num_resp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(22, this->num_resp(), output);
  }

  // bool kill_ack = 23;
  if (this->kill_ack() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(23, this->kill_ack(), output);
  }

  // @@protoc_insertion_point(serialize_end:union_service.UnionResponse)
}

::google::protobuf::uint8* UnionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:union_service.UnionResponse)
  // repeated uint64 doc_ids = 1;
  if (this->doc_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _doc_ids_cached_byte_size_, target);
  }
  for (int i = 0; i < this->doc_ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->doc_ids(i), target);
  }

  // uint64 create_union_req_time = 2;
  if (this->create_union_req_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->create_union_req_time(), target);
  }

  // uint64 unpack_union_req_time = 3;
  if (this->unpack_union_req_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->unpack_union_req_time(), target);
  }

  // uint64 update_union_util_time = 4;
  if (this->update_union_util_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->update_union_util_time(), target);
  }

  // uint64 get_intersection_srv_responses_time = 5;
  if (this->get_intersection_srv_responses_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->get_intersection_srv_responses_time(), target);
  }

  // uint64 create_intersection_srv_req_time = 6;
  if (this->create_intersection_srv_req_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->create_intersection_srv_req_time(), target);
  }

  // uint64 unpack_intersection_srv_resp_time = 7;
  if (this->unpack_intersection_srv_resp_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->unpack_intersection_srv_resp_time(), target);
  }

  // uint64 unpack_intersection_srv_req_time = 8;
  if (this->unpack_intersection_srv_req_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->unpack_intersection_srv_req_time(), target);
  }

  // uint64 calculate_intersection_time = 9;
  if (this->calculate_intersection_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->calculate_intersection_time(), target);
  }

  // uint64 pack_intersection_srv_resp_time = 10;
  if (this->pack_intersection_srv_resp_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->pack_intersection_srv_resp_time(), target);
  }

  // uint64 calculate_union_time = 11;
  if (this->calculate_union_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->calculate_union_time(), target);
  }

  // uint64 pack_union_resp_time = 12;
  if (this->pack_union_resp_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(12, this->pack_union_resp_time(), target);
  }

  // uint32 number_of_intersection_servers = 13;
  if (this->number_of_intersection_servers() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->number_of_intersection_servers(), target);
  }

  // .union_service.UtilResponse util_response = 14;
  if (this->has_util_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->util_response_, false, target);
  }

  // uint64 resp_time = 15;
  if (this->resp_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(15, this->resp_time(), target);
  }

  // uint64 union_time = 16;
  if (this->union_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(16, this->union_time(), target);
  }

  // uint64 start_stamp = 17;
  if (this->start_stamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(17, this->start_stamp(), target);
  }

  // uint64 end_stamp = 18;
  if (this->end_stamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(18, this->end_stamp(), target);
  }

  // uint64 request_id = 19;
  if (this->request_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(19, this->request_id(), target);
  }

  // uint64 num_inline = 20;
  if (this->num_inline() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(20, this->num_inline(), target);
  }

  // uint64 num_workers = 21;
  if (this->num_workers() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(21, this->num_workers(), target);
  }

  // uint64 num_resp = 22;
  if (this->num_resp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(22, this->num_resp(), target);
  }

  // bool kill_ack = 23;
  if (this->kill_ack() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(23, this->kill_ack(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:union_service.UnionResponse)
  return target;
}

size_t UnionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:union_service.UnionResponse)
  size_t total_size = 0;

  // repeated uint64 doc_ids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->doc_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _doc_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .union_service.UtilResponse util_response = 14;
  if (this->has_util_response()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->util_response_);
  }

  // uint64 create_union_req_time = 2;
  if (this->create_union_req_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->create_union_req_time());
  }

  // uint64 unpack_union_req_time = 3;
  if (this->unpack_union_req_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->unpack_union_req_time());
  }

  // uint64 update_union_util_time = 4;
  if (this->update_union_util_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->update_union_util_time());
  }

  // uint64 get_intersection_srv_responses_time = 5;
  if (this->get_intersection_srv_responses_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->get_intersection_srv_responses_time());
  }

  // uint64 create_intersection_srv_req_time = 6;
  if (this->create_intersection_srv_req_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->create_intersection_srv_req_time());
  }

  // uint64 unpack_intersection_srv_resp_time = 7;
  if (this->unpack_intersection_srv_resp_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->unpack_intersection_srv_resp_time());
  }

  // uint64 unpack_intersection_srv_req_time = 8;
  if (this->unpack_intersection_srv_req_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->unpack_intersection_srv_req_time());
  }

  // uint64 calculate_intersection_time = 9;
  if (this->calculate_intersection_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->calculate_intersection_time());
  }

  // uint64 pack_intersection_srv_resp_time = 10;
  if (this->pack_intersection_srv_resp_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->pack_intersection_srv_resp_time());
  }

  // uint64 calculate_union_time = 11;
  if (this->calculate_union_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->calculate_union_time());
  }

  // uint64 pack_union_resp_time = 12;
  if (this->pack_union_resp_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->pack_union_resp_time());
  }

  // uint64 resp_time = 15;
  if (this->resp_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->resp_time());
  }

  // uint64 union_time = 16;
  if (this->union_time() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->union_time());
  }

  // uint64 start_stamp = 17;
  if (this->start_stamp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start_stamp());
  }

  // uint64 end_stamp = 18;
  if (this->end_stamp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->end_stamp());
  }

  // uint32 number_of_intersection_servers = 13;
  if (this->number_of_intersection_servers() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->number_of_intersection_servers());
  }

  // bool kill_ack = 23;
  if (this->kill_ack() != 0) {
    total_size += 2 + 1;
  }

  // uint64 request_id = 19;
  if (this->request_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->request_id());
  }

  // uint64 num_inline = 20;
  if (this->num_inline() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->num_inline());
  }

  // uint64 num_workers = 21;
  if (this->num_workers() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->num_workers());
  }

  // uint64 num_resp = 22;
  if (this->num_resp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->num_resp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:union_service.UnionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UnionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:union_service.UnionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:union_service.UnionResponse)
    MergeFrom(*source);
  }
}

void UnionResponse::MergeFrom(const UnionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:union_service.UnionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  doc_ids_.MergeFrom(from.doc_ids_);
  if (from.has_util_response()) {
    mutable_util_response()->::union_service::UtilResponse::MergeFrom(from.util_response());
  }
  if (from.create_union_req_time() != 0) {
    set_create_union_req_time(from.create_union_req_time());
  }
  if (from.unpack_union_req_time() != 0) {
    set_unpack_union_req_time(from.unpack_union_req_time());
  }
  if (from.update_union_util_time() != 0) {
    set_update_union_util_time(from.update_union_util_time());
  }
  if (from.get_intersection_srv_responses_time() != 0) {
    set_get_intersection_srv_responses_time(from.get_intersection_srv_responses_time());
  }
  if (from.create_intersection_srv_req_time() != 0) {
    set_create_intersection_srv_req_time(from.create_intersection_srv_req_time());
  }
  if (from.unpack_intersection_srv_resp_time() != 0) {
    set_unpack_intersection_srv_resp_time(from.unpack_intersection_srv_resp_time());
  }
  if (from.unpack_intersection_srv_req_time() != 0) {
    set_unpack_intersection_srv_req_time(from.unpack_intersection_srv_req_time());
  }
  if (from.calculate_intersection_time() != 0) {
    set_calculate_intersection_time(from.calculate_intersection_time());
  }
  if (from.pack_intersection_srv_resp_time() != 0) {
    set_pack_intersection_srv_resp_time(from.pack_intersection_srv_resp_time());
  }
  if (from.calculate_union_time() != 0) {
    set_calculate_union_time(from.calculate_union_time());
  }
  if (from.pack_union_resp_time() != 0) {
    set_pack_union_resp_time(from.pack_union_resp_time());
  }
  if (from.resp_time() != 0) {
    set_resp_time(from.resp_time());
  }
  if (from.union_time() != 0) {
    set_union_time(from.union_time());
  }
  if (from.start_stamp() != 0) {
    set_start_stamp(from.start_stamp());
  }
  if (from.end_stamp() != 0) {
    set_end_stamp(from.end_stamp());
  }
  if (from.number_of_intersection_servers() != 0) {
    set_number_of_intersection_servers(from.number_of_intersection_servers());
  }
  if (from.kill_ack() != 0) {
    set_kill_ack(from.kill_ack());
  }
  if (from.request_id() != 0) {
    set_request_id(from.request_id());
  }
  if (from.num_inline() != 0) {
    set_num_inline(from.num_inline());
  }
  if (from.num_workers() != 0) {
    set_num_workers(from.num_workers());
  }
  if (from.num_resp() != 0) {
    set_num_resp(from.num_resp());
  }
}

void UnionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:union_service.UnionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnionResponse::CopyFrom(const UnionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:union_service.UnionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnionResponse::IsInitialized() const {
  return true;
}

void UnionResponse::Swap(UnionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnionResponse::InternalSwap(UnionResponse* other) {
  doc_ids_.UnsafeArenaSwap(&other->doc_ids_);
  std::swap(util_response_, other->util_response_);
  std::swap(create_union_req_time_, other->create_union_req_time_);
  std::swap(unpack_union_req_time_, other->unpack_union_req_time_);
  std::swap(update_union_util_time_, other->update_union_util_time_);
  std::swap(get_intersection_srv_responses_time_, other->get_intersection_srv_responses_time_);
  std::swap(create_intersection_srv_req_time_, other->create_intersection_srv_req_time_);
  std::swap(unpack_intersection_srv_resp_time_, other->unpack_intersection_srv_resp_time_);
  std::swap(unpack_intersection_srv_req_time_, other->unpack_intersection_srv_req_time_);
  std::swap(calculate_intersection_time_, other->calculate_intersection_time_);
  std::swap(pack_intersection_srv_resp_time_, other->pack_intersection_srv_resp_time_);
  std::swap(calculate_union_time_, other->calculate_union_time_);
  std::swap(pack_union_resp_time_, other->pack_union_resp_time_);
  std::swap(resp_time_, other->resp_time_);
  std::swap(union_time_, other->union_time_);
  std::swap(start_stamp_, other->start_stamp_);
  std::swap(end_stamp_, other->end_stamp_);
  std::swap(number_of_intersection_servers_, other->number_of_intersection_servers_);
  std::swap(kill_ack_, other->kill_ack_);
  std::swap(request_id_, other->request_id_);
  std::swap(num_inline_, other->num_inline_);
  std::swap(num_workers_, other->num_workers_);
  std::swap(num_resp_, other->num_resp_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnionResponse::GetMetadata() const {
  protobuf_union_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_union_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnionResponse

// repeated uint64 doc_ids = 1;
int UnionResponse::doc_ids_size() const {
  return doc_ids_.size();
}
void UnionResponse::clear_doc_ids() {
  doc_ids_.Clear();
}
::google::protobuf::uint64 UnionResponse::doc_ids(int index) const {
  // @@protoc_insertion_point(field_get:union_service.UnionResponse.doc_ids)
  return doc_ids_.Get(index);
}
void UnionResponse::set_doc_ids(int index, ::google::protobuf::uint64 value) {
  doc_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:union_service.UnionResponse.doc_ids)
}
void UnionResponse::add_doc_ids(::google::protobuf::uint64 value) {
  doc_ids_.Add(value);
  // @@protoc_insertion_point(field_add:union_service.UnionResponse.doc_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
UnionResponse::doc_ids() const {
  // @@protoc_insertion_point(field_list:union_service.UnionResponse.doc_ids)
  return doc_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
UnionResponse::mutable_doc_ids() {
  // @@protoc_insertion_point(field_mutable_list:union_service.UnionResponse.doc_ids)
  return &doc_ids_;
}

// uint64 create_union_req_time = 2;
void UnionResponse::clear_create_union_req_time() {
  create_union_req_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UnionResponse::create_union_req_time() const {
  // @@protoc_insertion_point(field_get:union_service.UnionResponse.create_union_req_time)
  return create_union_req_time_;
}
void UnionResponse::set_create_union_req_time(::google::protobuf::uint64 value) {
  
  create_union_req_time_ = value;
  // @@protoc_insertion_point(field_set:union_service.UnionResponse.create_union_req_time)
}

// uint64 unpack_union_req_time = 3;
void UnionResponse::clear_unpack_union_req_time() {
  unpack_union_req_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UnionResponse::unpack_union_req_time() const {
  // @@protoc_insertion_point(field_get:union_service.UnionResponse.unpack_union_req_time)
  return unpack_union_req_time_;
}
void UnionResponse::set_unpack_union_req_time(::google::protobuf::uint64 value) {
  
  unpack_union_req_time_ = value;
  // @@protoc_insertion_point(field_set:union_service.UnionResponse.unpack_union_req_time)
}

// uint64 update_union_util_time = 4;
void UnionResponse::clear_update_union_util_time() {
  update_union_util_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UnionResponse::update_union_util_time() const {
  // @@protoc_insertion_point(field_get:union_service.UnionResponse.update_union_util_time)
  return update_union_util_time_;
}
void UnionResponse::set_update_union_util_time(::google::protobuf::uint64 value) {
  
  update_union_util_time_ = value;
  // @@protoc_insertion_point(field_set:union_service.UnionResponse.update_union_util_time)
}

// uint64 get_intersection_srv_responses_time = 5;
void UnionResponse::clear_get_intersection_srv_responses_time() {
  get_intersection_srv_responses_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UnionResponse::get_intersection_srv_responses_time() const {
  // @@protoc_insertion_point(field_get:union_service.UnionResponse.get_intersection_srv_responses_time)
  return get_intersection_srv_responses_time_;
}
void UnionResponse::set_get_intersection_srv_responses_time(::google::protobuf::uint64 value) {
  
  get_intersection_srv_responses_time_ = value;
  // @@protoc_insertion_point(field_set:union_service.UnionResponse.get_intersection_srv_responses_time)
}

// uint64 create_intersection_srv_req_time = 6;
void UnionResponse::clear_create_intersection_srv_req_time() {
  create_intersection_srv_req_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UnionResponse::create_intersection_srv_req_time() const {
  // @@protoc_insertion_point(field_get:union_service.UnionResponse.create_intersection_srv_req_time)
  return create_intersection_srv_req_time_;
}
void UnionResponse::set_create_intersection_srv_req_time(::google::protobuf::uint64 value) {
  
  create_intersection_srv_req_time_ = value;
  // @@protoc_insertion_point(field_set:union_service.UnionResponse.create_intersection_srv_req_time)
}

// uint64 unpack_intersection_srv_resp_time = 7;
void UnionResponse::clear_unpack_intersection_srv_resp_time() {
  unpack_intersection_srv_resp_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UnionResponse::unpack_intersection_srv_resp_time() const {
  // @@protoc_insertion_point(field_get:union_service.UnionResponse.unpack_intersection_srv_resp_time)
  return unpack_intersection_srv_resp_time_;
}
void UnionResponse::set_unpack_intersection_srv_resp_time(::google::protobuf::uint64 value) {
  
  unpack_intersection_srv_resp_time_ = value;
  // @@protoc_insertion_point(field_set:union_service.UnionResponse.unpack_intersection_srv_resp_time)
}

// uint64 unpack_intersection_srv_req_time = 8;
void UnionResponse::clear_unpack_intersection_srv_req_time() {
  unpack_intersection_srv_req_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UnionResponse::unpack_intersection_srv_req_time() const {
  // @@protoc_insertion_point(field_get:union_service.UnionResponse.unpack_intersection_srv_req_time)
  return unpack_intersection_srv_req_time_;
}
void UnionResponse::set_unpack_intersection_srv_req_time(::google::protobuf::uint64 value) {
  
  unpack_intersection_srv_req_time_ = value;
  // @@protoc_insertion_point(field_set:union_service.UnionResponse.unpack_intersection_srv_req_time)
}

// uint64 calculate_intersection_time = 9;
void UnionResponse::clear_calculate_intersection_time() {
  calculate_intersection_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UnionResponse::calculate_intersection_time() const {
  // @@protoc_insertion_point(field_get:union_service.UnionResponse.calculate_intersection_time)
  return calculate_intersection_time_;
}
void UnionResponse::set_calculate_intersection_time(::google::protobuf::uint64 value) {
  
  calculate_intersection_time_ = value;
  // @@protoc_insertion_point(field_set:union_service.UnionResponse.calculate_intersection_time)
}

// uint64 pack_intersection_srv_resp_time = 10;
void UnionResponse::clear_pack_intersection_srv_resp_time() {
  pack_intersection_srv_resp_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UnionResponse::pack_intersection_srv_resp_time() const {
  // @@protoc_insertion_point(field_get:union_service.UnionResponse.pack_intersection_srv_resp_time)
  return pack_intersection_srv_resp_time_;
}
void UnionResponse::set_pack_intersection_srv_resp_time(::google::protobuf::uint64 value) {
  
  pack_intersection_srv_resp_time_ = value;
  // @@protoc_insertion_point(field_set:union_service.UnionResponse.pack_intersection_srv_resp_time)
}

// uint64 calculate_union_time = 11;
void UnionResponse::clear_calculate_union_time() {
  calculate_union_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UnionResponse::calculate_union_time() const {
  // @@protoc_insertion_point(field_get:union_service.UnionResponse.calculate_union_time)
  return calculate_union_time_;
}
void UnionResponse::set_calculate_union_time(::google::protobuf::uint64 value) {
  
  calculate_union_time_ = value;
  // @@protoc_insertion_point(field_set:union_service.UnionResponse.calculate_union_time)
}

// uint64 pack_union_resp_time = 12;
void UnionResponse::clear_pack_union_resp_time() {
  pack_union_resp_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UnionResponse::pack_union_resp_time() const {
  // @@protoc_insertion_point(field_get:union_service.UnionResponse.pack_union_resp_time)
  return pack_union_resp_time_;
}
void UnionResponse::set_pack_union_resp_time(::google::protobuf::uint64 value) {
  
  pack_union_resp_time_ = value;
  // @@protoc_insertion_point(field_set:union_service.UnionResponse.pack_union_resp_time)
}

// uint32 number_of_intersection_servers = 13;
void UnionResponse::clear_number_of_intersection_servers() {
  number_of_intersection_servers_ = 0u;
}
::google::protobuf::uint32 UnionResponse::number_of_intersection_servers() const {
  // @@protoc_insertion_point(field_get:union_service.UnionResponse.number_of_intersection_servers)
  return number_of_intersection_servers_;
}
void UnionResponse::set_number_of_intersection_servers(::google::protobuf::uint32 value) {
  
  number_of_intersection_servers_ = value;
  // @@protoc_insertion_point(field_set:union_service.UnionResponse.number_of_intersection_servers)
}

// .union_service.UtilResponse util_response = 14;
bool UnionResponse::has_util_response() const {
  return this != internal_default_instance() && util_response_ != NULL;
}
void UnionResponse::clear_util_response() {
  if (GetArenaNoVirtual() == NULL && util_response_ != NULL) delete util_response_;
  util_response_ = NULL;
}
const ::union_service::UtilResponse& UnionResponse::util_response() const {
  // @@protoc_insertion_point(field_get:union_service.UnionResponse.util_response)
  return util_response_ != NULL ? *util_response_
                         : *::union_service::UtilResponse::internal_default_instance();
}
::union_service::UtilResponse* UnionResponse::mutable_util_response() {
  
  if (util_response_ == NULL) {
    util_response_ = new ::union_service::UtilResponse;
  }
  // @@protoc_insertion_point(field_mutable:union_service.UnionResponse.util_response)
  return util_response_;
}
::union_service::UtilResponse* UnionResponse::release_util_response() {
  // @@protoc_insertion_point(field_release:union_service.UnionResponse.util_response)
  
  ::union_service::UtilResponse* temp = util_response_;
  util_response_ = NULL;
  return temp;
}
void UnionResponse::set_allocated_util_response(::union_service::UtilResponse* util_response) {
  delete util_response_;
  util_response_ = util_response;
  if (util_response) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:union_service.UnionResponse.util_response)
}

// uint64 resp_time = 15;
void UnionResponse::clear_resp_time() {
  resp_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UnionResponse::resp_time() const {
  // @@protoc_insertion_point(field_get:union_service.UnionResponse.resp_time)
  return resp_time_;
}
void UnionResponse::set_resp_time(::google::protobuf::uint64 value) {
  
  resp_time_ = value;
  // @@protoc_insertion_point(field_set:union_service.UnionResponse.resp_time)
}

// uint64 union_time = 16;
void UnionResponse::clear_union_time() {
  union_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UnionResponse::union_time() const {
  // @@protoc_insertion_point(field_get:union_service.UnionResponse.union_time)
  return union_time_;
}
void UnionResponse::set_union_time(::google::protobuf::uint64 value) {
  
  union_time_ = value;
  // @@protoc_insertion_point(field_set:union_service.UnionResponse.union_time)
}

// uint64 start_stamp = 17;
void UnionResponse::clear_start_stamp() {
  start_stamp_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UnionResponse::start_stamp() const {
  // @@protoc_insertion_point(field_get:union_service.UnionResponse.start_stamp)
  return start_stamp_;
}
void UnionResponse::set_start_stamp(::google::protobuf::uint64 value) {
  
  start_stamp_ = value;
  // @@protoc_insertion_point(field_set:union_service.UnionResponse.start_stamp)
}

// uint64 end_stamp = 18;
void UnionResponse::clear_end_stamp() {
  end_stamp_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UnionResponse::end_stamp() const {
  // @@protoc_insertion_point(field_get:union_service.UnionResponse.end_stamp)
  return end_stamp_;
}
void UnionResponse::set_end_stamp(::google::protobuf::uint64 value) {
  
  end_stamp_ = value;
  // @@protoc_insertion_point(field_set:union_service.UnionResponse.end_stamp)
}

// uint64 request_id = 19;
void UnionResponse::clear_request_id() {
  request_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UnionResponse::request_id() const {
  // @@protoc_insertion_point(field_get:union_service.UnionResponse.request_id)
  return request_id_;
}
void UnionResponse::set_request_id(::google::protobuf::uint64 value) {
  
  request_id_ = value;
  // @@protoc_insertion_point(field_set:union_service.UnionResponse.request_id)
}

// uint64 num_inline = 20;
void UnionResponse::clear_num_inline() {
  num_inline_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UnionResponse::num_inline() const {
  // @@protoc_insertion_point(field_get:union_service.UnionResponse.num_inline)
  return num_inline_;
}
void UnionResponse::set_num_inline(::google::protobuf::uint64 value) {
  
  num_inline_ = value;
  // @@protoc_insertion_point(field_set:union_service.UnionResponse.num_inline)
}

// uint64 num_workers = 21;
void UnionResponse::clear_num_workers() {
  num_workers_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UnionResponse::num_workers() const {
  // @@protoc_insertion_point(field_get:union_service.UnionResponse.num_workers)
  return num_workers_;
}
void UnionResponse::set_num_workers(::google::protobuf::uint64 value) {
  
  num_workers_ = value;
  // @@protoc_insertion_point(field_set:union_service.UnionResponse.num_workers)
}

// uint64 num_resp = 22;
void UnionResponse::clear_num_resp() {
  num_resp_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UnionResponse::num_resp() const {
  // @@protoc_insertion_point(field_get:union_service.UnionResponse.num_resp)
  return num_resp_;
}
void UnionResponse::set_num_resp(::google::protobuf::uint64 value) {
  
  num_resp_ = value;
  // @@protoc_insertion_point(field_set:union_service.UnionResponse.num_resp)
}

// bool kill_ack = 23;
void UnionResponse::clear_kill_ack() {
  kill_ack_ = false;
}
bool UnionResponse::kill_ack() const {
  // @@protoc_insertion_point(field_get:union_service.UnionResponse.kill_ack)
  return kill_ack_;
}
void UnionResponse::set_kill_ack(bool value) {
  
  kill_ack_ = value;
  // @@protoc_insertion_point(field_set:union_service.UnionResponse.kill_ack)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace union_service

// @@protoc_insertion_point(global_scope)
